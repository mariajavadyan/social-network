{"ast":null,"code":"let ADD_POST = \"ADD-POST\";\nlet UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"My first post\",\n        likesCount: 15\n      }, {\n        id: 2,\n        message: \"My second post\",\n        likesCount: 12\n      }, {\n        id: 3,\n        message: \"My third post\",\n        likesCount: 17\n      }, {\n        id: 4,\n        message: \"My fourth post\",\n        likesCount: 14\n      }],\n      newPostText: \"it-kamasutra.com\"\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Maria\"\n      }, {\n        id: 2,\n        name: \"Anna\"\n      }, {\n        id: 3,\n        name: \"Ani\"\n      }, {\n        id: 4,\n        name: \"Armen\"\n      }, {\n        id: 5,\n        name: \"Artak\"\n      }, {\n        id: 6,\n        name: \"Argam\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Hi\"\n      }, {\n        id: 2,\n        message: \"How are you\"\n      }, {\n        id: 3,\n        message: \"Lalala\"\n      }, {\n        id: 4,\n        message: \"Dididi\"\n      }, {\n        id: 5,\n        message: \"Dododo\"\n      }, {\n        id: 6,\n        message: \"Pararam\"\n      }],\n      newMessageBody: \"\"\n    }\n  },\n  _callSubscriber() {\n    console.log(\"state  changed\");\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  dispatch(action) {\n    if (action.type === \"ADD-POST\") {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._callSubscriber(this._state);\n    } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n    }\n  }\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const subscribe = observer => {\n  this._callSubscriber = observer;\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","addPostActionCreator","updateNewPostTextActionCreator","text","window"],"sources":["/home/mariajavadyan/Desktop/react/social-network/src/redux/state.js"],"sourcesContent":["let ADD_POST = \"ADD-POST\";\nlet UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [\n        {\n          id: 1,\n          message: \"My first post\",\n          likesCount: 15,\n        },\n\n        {\n          id: 2,\n          message: \"My second post\",\n          likesCount: 12,\n        },\n        {\n          id: 3,\n          message: \"My third post\",\n          likesCount: 17,\n        },\n        {\n          id: 4,\n          message: \"My fourth post\",\n          likesCount: 14,\n        },\n      ],\n      newPostText: \"it-kamasutra.com\",\n    },\n\n    dialogsPage: {\n      dialogs: [\n        {\n          id: 1,\n          name: \"Maria\",\n        },\n\n        {\n          id: 2,\n          name: \"Anna\",\n        },\n\n        {\n          id: 3,\n          name: \"Ani\",\n        },\n\n        {\n          id: 4,\n          name: \"Armen\",\n        },\n        {\n          id: 5,\n          name: \"Artak\",\n        },\n        {\n          id: 6,\n          name: \"Argam\",\n        },\n      ],\n      messages: [\n        {\n          id: 1,\n          message: \"Hi\",\n        },\n\n        {\n          id: 2,\n          message: \"How are you\",\n        },\n\n        {\n          id: 3,\n          message: \"Lalala\",\n        },\n\n        {\n          id: 4,\n          message: \"Dididi\",\n        },\n        {\n          id: 5,\n          message: \"Dododo\",\n        },\n        {\n          id: 6,\n          message: \"Pararam\",\n        },\n      ],\n\n      newMessageBody: \"\",\n    },\n  },\n  _callSubscriber() {\n    console.log(\"state  changed\");\n  },\n  getState() {\n    return this._state;\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === \"ADD-POST\") {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0,\n      };\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._callSubscriber(this._state);\n    } else if (action.type === \"UPDATE-NEW-POST-TEXT\") {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n    }\n  },\n};\n\nexport const addPostActionCreator = () => ({ type: ADD_POST });\n\nexport const updateNewPostTextActionCreator = (text) => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text,\n});\n\nexport const subscribe = (observer) => {\n  this._callSubscriber = observer;\n};\n\nexport default store;\nwindow.store = store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}